



typedef struct monitor_prm_t
{
/*
	1.主站信息
		1.主站的类型,STATION_MQTT,STATION_FRONT_END
		2.主站的接口类型，COM,ETH,GPRS
		3.主站的地址，根据不同类型提供不同的地址参数
		4.主站的规约376.1 MQTT
	       
	2.子设备信息
		1.设备类型 METER,LIGHTING
		2.设备ID
		3.设备设备逻辑地址
		4.设备安装地址
		5.设备是否存在
		6.设备是否激活
		7.设备软件版本
		8.设备硬件版本
		9.设备BOOT版本
		10.供应商信息
		11.制造商信息
		12.设备采集方案包括抄读数据项，抄读间隔(如果没有则采用默认间隔) 抄读端口，抄读规约，端口参数和规约参数
		13.设备事件方案，包括事件项开关，事件参数，事件推送开关
		14.控制数据项，抄读间隔(如果没有则采用默认间隔) 抄读端口，抄读规约，端口参数和规约参数
		15.视频数据项，抄读间隔(如果没有则采用默认间隔) 抄读端口，抄读规约，端口参数和规约参数
*/
}MONITOR_PRM_NVRAM_T;

/*
	抄读策略：

	1.从数据库中读出某块表的监测点参数，看看规约类型，规约参数，以及端口类型和端口参数
	2.设置规约参数和端口参数，
	3.组帧，将对应帧写入端口buf


抄读项分类，有实时抄读的，还有定时抄读的
		dat_item

		realtime =
		fixed time=TRUE,OR FALSE
		


	总体分两个通道，一个通道是任务性质的， 另外一个是实时性质的，实时性质的包括实时抄读，和实时控制
	对于任务性质的抄读分为四层：

	1.决定抄什么数据项------>通知下一层要抄哪个数据项
	2.在指定的数据项的情况下，决定抄哪几块表，，分拣出当前数据项的需要在哪一个端口下抄读，将数据项发送个下一级，某一块表抄读完成时，需要通知上一级
	3.接收到抄读收据项时，识别出是在哪一个端口抄，并组帧个端口任务，让其抄读
	4.端口任务接收数据项，并发送出去，需要检测数据项是否超时每抄到，并反馈给上一级任务
	
*/











































